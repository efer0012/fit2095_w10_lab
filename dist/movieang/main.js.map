{"version":3,"sources":["./src/app/deleteactor/deleteactor.component.ts","./src/app/deleteactor/deleteactor.component.html","./src/app/notfound/notfound.component.ts","./src/app/notfound/notfound.component.html","./src/app/addactortomovie/addactortomovie.component.ts","./src/app/addactortomovie/addactortomovie.component.html","./src/environments/environment.ts","./src/app/listactors/listactors.component.ts","./src/app/listactors/listactors.component.html","./src/app/addmovie/addmovie.component.ts","./src/app/addmovie/addmovie.component.html","./src/app/updateactor/updateactor.component.ts","./src/app/updateactor/updateactor.component.html","./src/app/addactor/addactor.component.ts","./src/app/addactor/addactor.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/database.service.ts","./src/app/deletemovie/deletemovie.component.ts","./src/app/deletemovie/deletemovie.component.html","./src/app/listmovies/listmovies.component.ts","./src/app/listmovies/listmovies.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-deleteactor\",\n  templateUrl: \"./deleteactor.component.html\",\n  styleUrls: [\"./deleteactor.component.css\"],\n})\nexport class DeleteactorComponent implements OnInit {\n  actorsDB: any[] = [];\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n\n  //Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n\n  // This callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetActors();\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteActor(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->\n\n\t<title>404 HTML Template by Colorlib</title>\n\n\t<!-- Google font -->\n\t<link href=\"https://fonts.googleapis.com/css?family=Montserrat:200,400,700\" rel=\"stylesheet\">\n\n\t<!-- Custom stlylesheet -->\n\t<link type=\"text/css\" rel=\"stylesheet\" href=\"notfound.component.css\" />\n\n\t<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\n\t<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n\t<!--[if lt IE 9]>\n\t\t  <script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n\t\t  <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n\t\t<![endif]-->\n\n</head>\n\n<body>\n\n\t<div id=\"notfound\">\n\t\t<div class=\"notfound\">\n\t\t\t<div class=\"notfound-404\">\n\t\t\t\t<h1>Oops!</h1>\n\t\t\t\t<h2>404 - The Page can't be found</h2>\n\t\t\t</div>\n\t\t\t<a href=\"/\">Go TO Homepage</a>\n\t\t</div>\n\t</div>\n\n</body><!-- This templates was made by Colorlib (https://colorlib.com) -->\n\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: 'app-addactortomovie',\n  templateUrl: './addactortomovie.component.html',\n  styleUrls: ['./addactortomovie.component.css']\n})\nexport class AddactortomovieComponent implements OnInit {\n\n  actorsDB: any[] = [];\n  moviesDB: any[] = [];\n\n  selectedMovie = null;\n  selectedActor = null;\n\n  constructor(private dbService: DatabaseService) { }\n\n  ngOnInit(): void {\n    this.onGetActors();\n    this.onGetMovies();\n  }\n\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n\n  //Get all Movies\n  onGetMovies() {\n    console.log(\"From on GetMovies\");\n\n    return this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n  onSelectActor(item) {\n    this.selectedActor = item;\n  }\n  onSelectMovie(item) {\n    this.selectedMovie = item;\n  }\n\n  onAddActor() {\n    let actorID = { id: this.selectedActor._id };\n    this.dbService.addActor(this.selectedMovie._id, actorID).subscribe(result => {\n      this.onGetMovies();\n      this.onGetActors();\n    });\n  }\n  \n}\n","<div class=\"section\">\n    <div class=\"alert alert-info\" role=\"alert\">\n        <h2>Select Actor</h2>\n    </div>\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Select</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-success\" (click)=\"onSelectActor(item)\">Select</button></td>\n      </tr>\n    </table>\n    <div class=\"alert alert-info\" role=\"alert\">\n        <h2>Select Movie</h2>\n    </div>\n    <table class=\"table table-striped\">\n        <tr>\n          <th>Title</th>\n          <th>Year</th>\n          <th>Select</th>\n        </tr>\n        <tr *ngFor=\"let item of moviesDB\">\n          <td>{{item.title}}</td>\n          <td>{{item.year}}</td>\n          <td><button type=\"submit\" class=\"btn btn-success\" (click)=\"onSelectMovie(item)\">Select</button></td>\n        </tr>\n      </table>\n    <hr>\n</div>\n\n<div class=\"alert alert-info\" role=\"alert\" *ngIf=\"selectedActor!=null&&selectedMovie!=null\">\n    <h3>Selected Actor: {{selectedActor.name}}</h3>\n    <h3>Selected Movie: {{selectedMovie.title}}</h3>\n</div>\n\n<div *ngIf=\"selectedActor!=null&&selectedMovie!=null\">\n    <button type=\"submit\" class=\"btn btn-success\" (click)=\"onAddActor()\">Add Actor</button>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: \"app-listactors\",\n  templateUrl: \"./listactors.component.html\",\n  styleUrls: [\"./listactors.component.css\"],\n})\nexport class ListactorsComponent implements OnInit {\n  actorsDB: any[] = [];\n\n  constructor(private dbService: DatabaseService) {}\n\n  ngOnInit() {\n    console.log(\"Hi From ListActors ngIOnit\");\n\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-addmovie',\n  templateUrl: './addmovie.component.html',\n  styleUrls: ['./addmovie.component.css']\n})\nexport class AddmovieComponent {\n\n  title: string = \"\";\n  year: number = 0;\n  movieId: string = \"\";\n\n  constructor(private dbService: DatabaseService, private router: Router) { }\n\n  onSaveMovie(){\n    let obj = { title: this.title, year: this.year };\n    this.dbService.createMovie(obj).subscribe(result => {\n      this.router.navigate([\"/listmovies\"]);\n    });\n  }\n}\n","<div class=\"section\">\n    <div class=\"form-group\">\n      <label for=\"title\">Title</label>\n      <input type=\"text\" class=\"form-control\" id=\"title\" [(ngModel)]=\"title\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"title\">Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"title\" [(ngModel)]=\"year\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveMovie()\">Save Movie</button>\n  </div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-updateactor\",\n  templateUrl: \"./updateactor.component.html\",\n  styleUrls: [\"./updateactor.component.css\"],\n})\nexport class UpdateactorComponent implements OnInit {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n\n  actorsDB: any[] = [];\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n\n  ngOnInit() {\n    this.onGetActors();\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Select!</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Update</button></td>\n      </tr>\n    </table>\n    <hr>\n    <div *ngIf=\"actorsDB.length>0\">\n      <div class=\"form-group\">\n        <label for=\"actorName\">Full Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"actorName\">Birth Year</label>\n        <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateActor()\">Update Actor</button>\n    </div>\n  </div>","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-addactor\",\n  templateUrl: \"./addactor.component.html\",\n  styleUrls: [\"./addactor.component.css\"],\n})\nexport class AddactorComponent {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.createActor(obj).subscribe(result => {\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n\n}","<div class=\"section\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Full Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Birth Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveActor()\">Save Actor</button>\n  </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'movieang';\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n  <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/listactors\" routerLinkActive=\"active\">List Actors</a>\n      </li>\n      <li class=\"nav-item\">\n\n          <a class=\"nav-link\" routerLink=\"/addactor\" routerLinkActive=\"active\">Add Actor</a>\n      </li>\n      <li class=\"nav-item\">\n\n          <a class=\"nav-link\" routerLink=\"/updateactor\" routerLinkActive=\"active\">Update Actor</a>\n      </li>\n      <li class=\"nav-item\">\n\n          <a class=\"nav-link\" routerLink=\"/deleteactor\" routerLinkActive=\"active\">Delete Actor</a>\n      </li>\n      <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/listmovies\" routerLinkActive=\"active\">List Movies</a>\n      </li>\n      <li class=\"nav-item\">\n\n          <a class=\"nav-link\" routerLink=\"/addmovie\" routerLinkActive=\"active\">Add Movie</a>\n      </li>\n      <li class=\"nav-item\">\n\n          <a class=\"nav-link\" routerLink=\"/deletemovie\" routerLinkActive=\"active\">Delete Movie</a>\n      </li>\n      <li class=\"nav-item\">\n\n          <a class=\"nav-link\" routerLink=\"/addactortomovie\" routerLinkActive=\"active\">Add Actor to Movie</a>\n      </li>\n  </ul>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\nimport { DatabaseService } from \"./database.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ListactorsComponent } from \"./listactors/listactors.component\";\nimport { AddactorComponent } from \"./addactor/addactor.component\";\nimport { DeleteactorComponent } from \"./deleteactor/deleteactor.component\";\nimport { UpdateactorComponent } from \"./updateactor/updateactor.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AddmovieComponent } from './addmovie/addmovie.component';\nimport { DeletemovieComponent } from './deletemovie/deletemovie.component';\nimport { ListmoviesComponent } from './listmovies/listmovies.component';\nimport { AddactortomovieComponent } from './addactortomovie/addactortomovie.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\n\nconst appRoutes: Routes = [\n  { path: \"listactors\", component: ListactorsComponent },\n  { path: \"addactor\", component: AddactorComponent },\n  { path: \"updateactor\", component: UpdateactorComponent },\n  { path: \"deleteactor\", component: DeleteactorComponent },\n  { path: \"\", redirectTo: \"/listactors\", pathMatch: \"full\" },\n  { path: \"listmovies\", component: ListmoviesComponent },\n  { path: \"addmovie\", component: AddmovieComponent },\n  { path: \"deletemovie\", component: DeletemovieComponent },\n  { path: \"addactortomovie\", component: AddactortomovieComponent },\n  { path: \"**\", component: NotfoundComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListactorsComponent,\n    AddactorComponent,\n    UpdateactorComponent,\n    DeleteactorComponent,\n    AddmovieComponent,\n    DeletemovieComponent,\n    ListmoviesComponent,\n    AddactortomovieComponent,\n    NotfoundComponent,\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes,{ useHash: true }),\n\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatabaseService {\n  constructor(private http: HttpClient) {}\n  result: any;\n\n  //ACTORS\n  getActors() {\n    return this.http.get(\"/actors\");\n  }\n  getActor(id: string) {\n    let url = \"/actors/\" + id;\n    return this.http.get(url);\n  }\n  createActor(data) {\n    return this.http.post(\"/actors\", data, httpOptions);\n  }\n  updateActor(id, data) {\n    let url = \"/actors/\" + id;\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteActor(id) {\n    let url = \"/actors/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n\n  //MOVIES\n  getMovies() {\n    return this.http.get(\"/movies\");\n  }\n  createMovie(data) {\n    return this.http.post(\"/movies\", data, httpOptions);\n  }\n  deleteMovie(id) {\n    let url = \"/movies/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  deleteOldMovies(data){\n    return this.http.post(\"/movies/deletebyyear\", data, httpOptions);\n  }\n  addActor(movieID, actorID){\n    let url = \"/movies/\" + movieID + \"/actors\";\n    return this.http.post(url, actorID, httpOptions);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-deletemovie',\n  templateUrl: './deletemovie.component.html',\n  styleUrls: ['./deletemovie.component.css']\n})\nexport class DeletemovieComponent implements OnInit {\n  moviesDB: any[] = [];\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Movies\n  onGetMovies() {\n    console.log(\"From on GetMovies\");\n\n    return this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n  //Delete Movie\n  onDeleteMovie(item) {\n    this.dbService.deleteMovie(item._id).subscribe(result => {\n      this.onGetMovies();\n      this.router.navigate([\"/listmovies\"]);\n    });\n  }\n\n  // This callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetMovies();\n  }\n}\n","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteMovie(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: 'app-listmovies',\n  templateUrl: './listmovies.component.html',\n  styleUrls: ['./listmovies.component.css']\n})\nexport class ListmoviesComponent implements OnInit {\n\n  moviesDB: any[] = [];\n\n  constructor(private dbService: DatabaseService) { }\n\n  ngOnInit(): void {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n      </tr>\n    </table>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}